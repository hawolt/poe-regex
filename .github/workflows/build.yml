name: Build Project

on:
  push:
    branches:
      - main
      - dev

jobs:
  build-map-affix-config:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev'

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Download Map Modifier JSON
      run: |
        curl -L -o map.data.json https://poedb.tw/us/api/MapMods
    
    - name: Build Map Affix config
      run: |
        jq -r '.data[].Name' map.data.json > ./public/league/settler/map.affix.config

    - name: Commit and push map.affix.config
      run: |
        git checkout dev
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add ./public/league/settler/map.affix.config
        if git diff --cached --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Build: create map.affix.config"
          git push origin dev
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Install dependencies
      run: npm install

    - name: Build the project
      run: npm run build
    
    - name: Commit and push bundle.js
      run: |
        git checkout dev
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add public/bundle.js
        if git diff --cached --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Build: update bundle.js"
          git push origin dev
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Copy CNAME file
      run: |
        echo 'exile.re' > ./public/CNAME

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./public
